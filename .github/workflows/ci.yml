name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Testing and Build
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: portfolio-backend/package-lock.json
        
    - name: Install backend dependencies
      working-directory: ./portfolio-backend
      run: npm ci
      
    - name: Run backend linting
      working-directory: ./portfolio-backend
      run: npm run lint
      continue-on-error: true
      
    - name: Run backend tests with coverage
      working-directory: ./portfolio-backend
      run: npm run test:ci
      
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./portfolio-backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
        
    - name: Build backend
      working-directory: ./portfolio-backend
      run: npm run build:compile

  # Frontend Testing and Build
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: portfolio-frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./portfolio-frontend
      run: npm ci
      
    - name: Run frontend linting
      working-directory: ./portfolio-frontend
      run: npm run lint
      continue-on-error: true
      
    - name: Run frontend tests with coverage
      working-directory: ./portfolio-frontend
      run: npm run test:ci
      env:
        CI: true
        
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./portfolio-frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false
        
    - name: Build frontend for production
      working-directory: ./portfolio-frontend
      run: npm run build:only
      env:
        CI: true
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'http://localhost:3001/api' }}

  # Integration Tests (Optional - run both together)
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install all dependencies
      run: |
        cd portfolio-backend && npm ci
        cd ../portfolio-frontend && npm ci
        
    - name: Start backend server
      working-directory: ./portfolio-backend
      run: |
        npm start &
        sleep 10
      env:
        NODE_ENV: test
        OWNER_SECRET_KEY: test-secret-key
        
    - name: Run integration tests
      working-directory: ./portfolio-frontend
      run: npm run test:ci
      env:
        CI: true
        REACT_APP_API_URL: http://localhost:3001/api

  # Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Audit backend dependencies
      working-directory: ./portfolio-backend
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Audit frontend dependencies
      working-directory: ./portfolio-frontend
      run: npm audit --audit-level moderate
      continue-on-error: true

  # Build Status Summary
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, integration-test, security-audit]
    if: always()
    
    steps:
    - name: Build Status
      run: |
        echo "Backend Tests: ${{ needs.backend-test.result }}"
        echo "Frontend Tests: ${{ needs.frontend-test.result }}"
        echo "Integration Tests: ${{ needs.integration-test.result }}"
        echo "Security Audit: ${{ needs.security-audit.result }}"
        
        if [[ "${{ needs.backend-test.result }}" == "success" && "${{ needs.frontend-test.result }}" == "success" ]]; then
          echo "✅ All critical tests passed!"
          exit 0
        else
          echo "❌ Some tests failed!"
          exit 1
        fi
